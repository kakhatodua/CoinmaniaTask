// <auto-generated />
using CoinmaniaTask.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoinmaniaTask.Migrations
{
    [DbContext(typeof(CoinmaniaDbContext))]
    [Migration("20240329171417_currency")]
    partial class currency
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoinmaniaTask.Models.Currency", b =>
                {
                    b.Property<string>("Base")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseSymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BuyPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Quote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuoteSymbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SellPrice")
                        .HasColumnType("float");

                    b.HasKey("Base");

                    b.ToTable("Currencies");
                });
#pragma warning restore 612, 618
        }
    }
}
